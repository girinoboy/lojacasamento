<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>lojacasamento-ear</groupId>
	<artifactId>lojacasamento-web</artifactId>
	<packaging>war</packaging>
	<name>lojacasamento-web</name>


	<parent>
		<groupId>Projeto</groupId>
		<artifactId>lojacasamento</artifactId>
		<version>1.0</version>
	</parent>

	<dependencies>

		<dependency>
			<groupId>lojacasamento-ear</groupId>
			<artifactId>lojacasamento-core</artifactId>
			<version>1.0</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>lojacasamento-ear</groupId>
			<artifactId>pagseguro-api</artifactId>
			<version>1.0</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- MyFaces -->
		<dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-impl</artifactId>
			<version>2.1.11</version>
		</dependency>
		<dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-api</artifactId>
			<version>2.1.11</version>
			<scope>compile</scope>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>com.sun.faces</groupId> -->
<!-- 			<artifactId>jsf-api</artifactId> -->
<!-- 			<version>2.2.8</version> -->
<!-- 		</dependency> -->

<!-- 		<dependency> -->
<!-- 			<groupId>com.sun.faces</groupId> -->
<!-- 			<artifactId>jsf-impl</artifactId> -->
<!-- 			<version>2.2.8</version> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>6.0</version>
		</dependency>


        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.3.2</version>
		</dependency>


		<dependency>
			<groupId>org.primefaces.themes</groupId>
			<artifactId>all-themes</artifactId>
			<version>1.0.10</version>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
					<webResources>
                    <resource>
                    	
                        <directory>${project.basedir}/src/main/webapp/WEB-INF/lib</directory>
                        <targetPath>WEB-INF/lib</targetPath>
                        <includes>
                            <include>**/*.jar</include>
                        </includes>
                    </resource>
                </webResources>
				</configuration>
			</plugin>
          <plugin>
    <artifactId>maven-resources-plugin</artifactId>
    <version>2.6</version>
    <executions>
        <execution>
            <id>openshift</id>
            <!-- may adjust to another phase before package but make sure your plugin is bound to a phase
            because otherwise it wont be invoked during build! Now its bound to the first phase of the
            default lifecycle for packaging type war -->
            <phase>validate</phase>
            <goals>
                <!-- use the copy-resources goal of this plugin - it will copy resources :) -->
                <goal>copy-resources</goal>
            </goals>
            <configuration>
                <!-- this points to /target of the current project, you may adjust it to wherever it must be placed to be packed into the root of the war (just try&error) -->
                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                <resources>
                    <resource>
                        <!-- this points to a folder /misc under the project root where we expect the lib.jar -->
                        <directory>${project.basedir}/src/main/webapp/WEB-INF/lib</directory>
                        <!-- unless you specify what to include anything of the above directory will be included -->
<!--                         <includes> -->
<!--                             <include>pagseguro-api-1.0.0.jar</include> -->
<!--                         </includes> -->
                    </resource>
                </resources>
            </configuration>
        </execution>
    </executions>
</plugin>
		</plugins>
		<finalName>WEB</finalName>
	</build>
</project>
